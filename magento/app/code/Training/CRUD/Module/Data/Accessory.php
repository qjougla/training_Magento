<?php

namespace Training\CRUD\Model\Data;

use Magento\Framework\Model\AbstractModel;
use Training\CRUD\Api\Data\AccessoryInterface;

class Accessory extends AbstractModel implements AccessoryInterface
{
    protected $_eventPrefix = 'training_crud_accessory';
    protected $_eventObject = 'training_crud_accessory';

    public function _construct()
    {
        $this->_init(\Training\CRUD\Model\ResourceModel\Accessory::class);
        parent::_construct(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritDoc
     */
    public function getAccessoryId()
    {
        return $this->getData(self::ACCESSORY_ID);
    }

    /**
     * @inheritDoc
     */
    public function setAccessoryId($accessoryId)
    {
        $this->setData(self::ACCESSORY_ID, $accessoryId);
        return $this;
    }

    /**
     * @inheritDoc
     */
    public function getName()
    {
        return $this->getData(self::ACCESSORY_NAME);
    }

    /**
     * @inheritDoc
     */
    public function setName($name)
    {
        $this->setData(self::ACCESSORY_NAME, $name);
        return $this;
    }

    /**
     * @inheritDoc
     */
    public function getDescription()
    {
        return $this->getData(self::ACCESSORY_DESCRIPTION);
    }

    /**
     * @inheritDoc
     */
    public function setDescription($description)
    {
        $this->setData(self::ACCESSORY_DESCRIPTION, $description);
        return $this;
    }

    /**
     * @inheritDoc
     */
    public function getProductId()
    {
        return $this->getData(self::ACCESSORY_PRODUCT_ID);
    }

    /**
     * @inheritDoc
     */
    public function setProductId($productId)
    {
        $this->setData(self::ACCESSORY_PRODUCT_ID, $productId);
        return $this;
    }
}
